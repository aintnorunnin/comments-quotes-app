[{"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\index.tsx":"1","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\App.tsx":"2","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\NewQuote.tsx":"3","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.tsx":"4","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\UI\\Card.tsx":"5","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.tsx":"6","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\QuoteDetail.tsx":"7","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\Quotes.tsx":"8","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.tsx":"9","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.tsx":"10","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.tsx":"11","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.tsx":"12","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.tsx":"13","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.tsx":"14","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\NotFound.tsx":"15","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\NoQuotesFound.tsx":"16","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\store.tsx":"17","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\Quotes\\quotes-slice.tsx":"18","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\Quotes\\quotes-actions.tsx":"19","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\storeApi.tsx":"20","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentsList.tsx":"21","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentItem.tsx":"22"},{"size":385,"mtime":1642709443358,"results":"23","hashOfConfig":"24"},{"size":1227,"mtime":1643062022368,"results":"25","hashOfConfig":"24"},{"size":812,"mtime":1642715294377,"results":"26","hashOfConfig":"24"},{"size":2144,"mtime":1642797790945,"results":"27","hashOfConfig":"24"},{"size":188,"mtime":1642556374903,"results":"28","hashOfConfig":"24"},{"size":194,"mtime":1642556421638,"results":"29","hashOfConfig":"24"},{"size":1270,"mtime":1642897076030,"results":"30","hashOfConfig":"24"},{"size":799,"mtime":1642791486274,"results":"31","hashOfConfig":"24"},{"size":401,"mtime":1642560615762,"results":"32","hashOfConfig":"24"},{"size":1706,"mtime":1642791780850,"results":"33","hashOfConfig":"24"},{"size":456,"mtime":1642563172186,"results":"34","hashOfConfig":"24"},{"size":693,"mtime":1642564221416,"results":"35","hashOfConfig":"24"},{"size":1616,"mtime":1642892778175,"results":"36","hashOfConfig":"24"},{"size":1800,"mtime":1642815943280,"results":"37","hashOfConfig":"24"},{"size":233,"mtime":1642566860334,"results":"38","hashOfConfig":"24"},{"size":295,"mtime":1642557001545,"results":"39","hashOfConfig":"24"},{"size":220,"mtime":1642710797380,"results":"40","hashOfConfig":"24"},{"size":1170,"mtime":1642893173629,"results":"41","hashOfConfig":"24"},{"size":952,"mtime":1642717031828,"results":"42","hashOfConfig":"24"},{"size":3174,"mtime":1642897246583,"results":"43","hashOfConfig":"24"},{"size":419,"mtime":1642815996416,"results":"44","hashOfConfig":"24"},{"size":231,"mtime":1642556839735,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jaxta2",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\index.tsx",[],["95","96"],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\App.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\NewQuote.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\UI\\Card.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\QuoteDetail.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\Quotes.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.tsx",["97","98"],"import React from \"react\";\nimport { useMemo } from \"react\";\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Quote from \"../../models/Quote\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\ninterface QuoteListProps {\n  quotes: Quote[];\n}\n\nconst QuoteList: React.FC<QuoteListProps> = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const sortCardinality = useMemo(() => {\n    return queryParams.get(\"sort\");\n  }, [queryParams.get(\"sort\")]);\n\n  const sortedQuotes = useMemo(() => {\n    return generateSortedQuotes([...props.quotes], sortCardinality);\n  }, [props.quotes, sortCardinality]);\n\n  function changeSorting() {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${sortCardinality === \"asc\" ? \"desc\" : \"asc\"}`,\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSorting}>\n          Sort {sortCardinality === \"asc\" ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote: Quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nfunction generateSortedQuotes(quotes: Quote[], sortCardinality: string | null) {\n  return quotes.sort((q1: Quote, q2: Quote) => {\n    if (sortCardinality === \"asc\") {\n      return q1.id - q2.id;\n    } else {\n      return q2.id - q1.id;\n    }\n  });\n}\n\nexport default QuoteList;\n","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.tsx",["99"],"import React from \"react\";\nimport { useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { fetchComments } from \"../../store/storeApi\";\nimport { useEffect } from \"react\";\nimport Comment from \"../../models/Comment\";\nimport CommentsList from \"./CommentsList\";\nimport { useCallback } from \"react\";\n\ninterface ICommentsProp {\n  quoteId: number;\n}\n\nconst INITIAL_COMMENTS: Comment[] = [];\n\nconst Comments: React.FC<ICommentsProp> = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [comments, setComments] = useState(INITIAL_COMMENTS);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const retrieveComments = useCallback(async () => {\n    try {\n      const commentsData = await fetchComments(props.quoteId.toString());\n      setComments(commentsData);\n    } catch (error) {\n      console.log(\"There was error trying to get comments\");\n    }\n  }, [props.quoteId]);\n\n  useEffect(() => {\n    retrieveComments();\n  }, [retrieveComments]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={props.quoteId}\n          onAddComment={retrieveComments}\n        />\n      )}\n      {comments.length > 0 && <CommentsList comments={comments} />}\n      {comments.length == 0 && <p>Comments...</p>}\n    </section>\n  );\n};\n\nexport default Comments;\n","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.tsx",["100","101","102"],"import React, { FormEvent } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport Comment from \"../../models/Comment\";\nimport { postNewComment } from \"../../store/storeApi\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\ninterface INewCommentFormProp {\n  quoteId: number;\n  onAddComment: () => void;\n}\nconst NewCommentForm: React.FC<INewCommentFormProp> = (props) => {\n  const commentTextRef = useRef<HTMLTextAreaElement>(null);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const postComment = async (comment: Comment) => {\n    setLoading(true);\n    setStatus(\"Pending\");\n    try {\n      await postNewComment(comment);\n      setStatus(\"Complete\");\n    } catch (error) {\n      const err = error as Error;\n      console.log(err)\n      setError(err.message);\n    }\n    setLoading(false);\n  };\n\n  const submitFormHandler = (event: FormEvent) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const comment: Comment = {\n      quoteId: props.quoteId,\n      text: commentTextRef.current!.value,\n    };\n\n    postComment(comment);\n  };\n\n  useEffect(() => {\n    if (status === \"Complete\") {\n      props.onAddComment();\n    }\n  }, [status]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows={5} ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\pages\\NotFound.tsx",["103"],"import React from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <p>Page not found! </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\quotes\\NoQuotesFound.tsx",["104"],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\store.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\Quotes\\quotes-slice.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\Quotes\\quotes-actions.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\store\\storeApi.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentsList.tsx",[],"C:\\Users\\Brandon\\Desktop\\Udemy_Courses\\React\\React.tsx\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentItem.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":21,"column":6,"nodeType":"111","endLine":21,"endColumn":31,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":21,"column":7,"nodeType":"114","endLine":21,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":54,"column":24,"nodeType":"117","messageId":"118","endLine":54,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":17,"column":10,"nodeType":"121","messageId":"122","endLine":17,"endColumn":15},{"ruleId":"109","severity":1,"message":"124","line":52,"column":6,"nodeType":"111","endLine":52,"endColumn":14,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"126","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":8,"column":7,"nodeType":"129","endLine":8,"endColumn":26},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'queryParams'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["133"],"'NoQuotesFound' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [queryParams]",{"range":"138","text":"139"},"Update the dependencies array to be: [props, status]",{"range":"140","text":"141"},[595,620],"[queryParams]",[1345,1353],"[props, status]"]